{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","assets/noPoster.png","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Loader","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","noPoster","role","aria-label","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","map","movie","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeCotainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","pathname","location","includes","match","push","history","numberId","Number","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37351d83.chunk.js","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: propTypes.string.isRequired,\n  children: propTypes.oneOfType([\n    propTypes.arrayOf(propTypes.node),\n    propTypes.node,\n  ]),\n};\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 22px;\n`;\n\nconst Loader = () => <Container>Loading...</Container>;\n\nexport default Loader;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: propTypes.string.isRequired,\n  color: propTypes.string.isRequired,\n};\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/media/noPoster.d62f7a01.png\";","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport noPoster from \"../assets/noPoster.png\";\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : noPoster\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: propTypes.number.isRequired,\n  imageUrl: propTypes.string,\n  title: propTypes.string.isRequired,\n  rating: propTypes.number,\n  year: propTypes.string,\n  isMovie: propTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Yoonflix</title>\n    </Helmet>\n\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: propTypes.array,\n  popular: propTypes.array,\n  upcoming: propTypes.array,\n  loading: propTypes.bool.isRequired,\n  error: propTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"836b00946cb7609c4f5bd1f6ebae895e\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  moiveDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeCotainer from \"./HomeContainer\";\n\nexport default HomeCotainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({ error: \"Can't find moive information\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Yoonflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"AiringToday\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\nTVPresenter.propTypes = {\n  topRated: propTypes.array,\n  popular: propTypes.array,\n  airingToday: propTypes.array,\n  loading: propTypes.bool.isRequired,\n  error: propTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({ error: \"Can't find TV information\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  error,\n  searchTerm,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Yoonflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {movieResults &&\n          tvResults &&\n          movieResults.length === 0 &&\n          tvResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\"></Message>\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: propTypes.array,\n  tvResults: propTypes.array,\n  error: propTypes.string,\n  searchTerm: propTypes.string,\n  loading: propTypes.bool.isRequired,\n  handleSubmit: propTypes.func.isRequired,\n  updateTerm: propTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Cant't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport noPoster from \"../../assets/noPoster.png\";\nimport { Helmet } from \"react-helmet\";\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Yoonflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.title ? result.title : result.name} | Yoonflix</title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : noPoster\n          }\n        />\n        <Data>\n          <Title>{result.title ? result.title : result.name}</Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: propTypes.object,\n  loading: propTypes.bool.isRequired,\n  error: propTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const numberId = Number(id);\n    if (isNaN(numberId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.moiveDetail(numberId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(numberId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"Components/Header\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}